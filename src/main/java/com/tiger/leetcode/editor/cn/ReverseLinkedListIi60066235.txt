
	/**
	 * Definition for singly-linked list.
	 * public class ListNode {
	 * int val;
	 * ListNode next;
	 * ListNode(int x) { val = x; }
	 * }
	 */
	class Solution {
		public ListNode reverseBetween(ListNode head, int m, int n) {
			ListNode subHead = head;
			while (m > 2) {
				subHead = subHead.next;
				m--;
			}
			int count = n - m + 1;
			ListNode pre = null;
			ListNode cur = subHead.next;
			ListNode tail = null;
			while (count != 0) {
				tail = cur.next;
				cur.next = pre;
				pre = cur;
				cur = tail;
				count--;
			}

			subHead.next.next = tail;
			subHead.next = pre;

			return head;
		}
	}

//runtime_error:Line 22: java.lang.NullPointerException
//last_testcase:[5] 1 1
