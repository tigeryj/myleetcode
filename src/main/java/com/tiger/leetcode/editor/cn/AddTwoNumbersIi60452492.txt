
	/**
	 * Definition for singly-linked list.
	 * public class ListNode {
	 * int val;
	 * ListNode next;
	 * ListNode(int x) { val = x; }
	 * }
	 */
	class Solution {
		public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
			Stack<Integer> st1 = new Stack<>();
			Stack<Integer> st2 = new Stack<>();

			while (l1 != null || l2 != null) {
				if (st1 != null) {
					st1.push(l1.val);
					l1 = l1.next;
				}
				if (l2 != null) {
					st2.push(l2.val);
					l2 = l2.next;
				}
			}
			int append = 0;
			ListNode head = null;
			while (!st1.isEmpty() || !st2.isEmpty() || append != 0) {
				int val1 = 0, val2 = 0;
				if (!st1.empty()) {
					val1 = st1.pop();
				}
				if (!st2.empty()) {
					val2 = st2.pop();
				}
				int sum = val1 + val2 + append;
				append = sum / 10;
				ListNode node = new ListNode(sum % 10);
				node.next = head;
				head = node;
			}
			return head;
		}
	}

//runtime_error:Line 17: java.lang.NullPointerException
//last_testcase:[0] [7,3]
